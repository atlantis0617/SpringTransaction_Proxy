<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
 
    <!-- 引入外部的属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
     
    <!-- C3P0配置 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
    </bean>
     
    <!-- 配置业务类 -->
    <bean id="accountService" class="org.spring.service.impl.AccountServiceImpl">
        <!-- 注入DAO -->
        <property name="accountDao" ref="accountDao"/>
    </bean>
     
    <!-- 配置DAO类 -->
    <bean id="accountDao" class="org.spring.dao.impl.AccountDaoImpl">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
     
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>   
    </bean>
     
    <!-- 配置事务代理 -->
    <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <!-- 注入事务管理器 -->
        <property name="transactionManager" ref="transactionManager"/>
        <!-- 注入目标代理类 -->
        <property name="target" ref="accountService"/>
        <!-- 注入事务属性 -->
        <property name="transactionAttributes">
            <props>
                <!-- prop参数：共五个
                    1.PROPAGATION   :   事务的传播行为
                    2.ISOLATION     :   事务的隔离级别
                    3.READONLY      :   是否只读
                    4.-Exception    :   发生哪些异常回滚事务
                    5.+Exception    :   发生哪些异常不会滚事务
                 -->
                <prop key="transfer">PROPAGATION_REQUIRED</prop><!-- 需要事务管理的方法，及事务属性 -->
            </props>
        </property>
    </bean>
 
</beans>